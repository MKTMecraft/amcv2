
@{
    ViewBag.Title = "Wine Varitals";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .checkbox {
    width: 25px;
    height: 25px;
}
    thead{
        background:#000;
        color:white;
    }

    .addData {
        color: white !important;
        background: #138496 !important;
    }

    .addFilters {
        color: black !important;
        background: #e9e9e9 !important;
    }

    .has-error .checkbox, .has-error .checkbox-inline, .has-error .control-label, .has-error .form-control-feedback, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .has-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio label, .has-error.radio-inline label {
        color: #e73d4a
    }

    .has-error .form-control {
        border-color: #e73d4a;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075)
    }

        .has-error .form-control:focus {
            border-color: #d71b29;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f;
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f
        }

    .has-error .input-group-addon {
        color: #e73d4a;
        border-color: #e73d4a;
        background-color: #fbe1e3
    }
</style>

@using TodoDashboard.Common;
@using TodoDashboard.Pages;
@using TodoDashboard.Infrastructure;
@Html.AntiForgeryToken()

<div class="block-header">
    <div class="row">
        <div class="col-lg-6 col-md-8 col-sm-12">
            <h2><a href="javascript:void(0);" class="btn btn-xs btn-link btn-toggle-fullwidth"><i class="fa fa-arrow-left"></i></a> Wine Varitals</h2>
            <ul class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action(Actions.Index,Controllers.Home,new { Area=""})"><i class="icon-home"></i></a></li>
                <li class="breadcrumb-item active">Wine Varitals</li>
            </ul>
        </div>
    </div>
</div>

<div class="row clearfix">
    <div class="col-md-12">
        <div class="card">
            <div class="body">
                <div class="portlet light bordered">
                    <div class="portlet-title">
                        <input type="hidden" id="checklog" />
                        <div class="tools col-md-12"></div>
                    </div>
                    <div class="portlet-body" id="divCustomerTable">
                        <table class="table table-striped table-bordered table-hover" id="CustomerTable"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal animated fadeIn show" id="upsert" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="title" id="smallModalLabel">Add Wine Varital</h6>
            </div>
            <div class="modal-body">
                <form class="form-auth-small" method="post" id="frmuser">
                    <div class="row clearfix">
                        <input type="hidden" id="Id" />
                        <div class="col-md-12 col-sm-12">
                            <div class="form-group">
                                <input type="text" id="name" name="name" class="form-control" placeholder="Wine Varital Name *">
                            </div>
                        </div>
                        <div class="col-12" style="text-align:right;">
                            <button type="submit" class="btn btn-primary saveBtn">Save</button>
                            <button class="btn btn-primary loading" type="button" disabled="" style="display:none;">
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                Saving...
                            </button>
                            <button type="button" class="btn btn-secondary closeBtn" onclick="CloseUpsert();">Close</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section dashboardscripts{
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <script src="~/Scripts/datatable.js"></script>
    <script src="~/Scripts/datatables.min.js"></script>
    <script src="~/Scripts/datatables.bootstrap.js"></script>
}

@section Scripts {

    <script>

    var TableDatatablesColreorder = function () {

    var initTable1 = function () {
        var table = $('#CustomerTable');

        var oTable = table.dataTable({
            "stateSave": true,
            "autoWidth": false,
            "paging": true,
            // Internationalisation. For more info refer to http://datatables.net/manual/i18n
            "language": {
                "aria": {
                    "sortAscending": ": activate to sort column ascending",
                    "sortDescending": ": activate to sort column descending"
                },
                "emptyTable": "No data available in table",
                "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                "infoEmpty": "No entries found",
                "infoFiltered": "(filtered1 from _MAX_ total entries)",
                "lengthMenu": "_MENU_ entries",
                "search": "Search:",
                "zeroRecords": "No matching records found"
            },
            "pageLength": 10,
            "processing": true,
            "serverSide": true,
            "ajax": {
                async: true,
                url: '@Url.Action(Actions.BindData, Controllers.Master, new { area =""})',
                type: "post",
                data: BuildSearchCriteria()
            },
            "columns": [
                {
                    "title": "<input type='checkbox' id='select_all' class='checkbox'>", "data": "",
                    "render": function (data, type, row) {
                        return '<input type="checkbox" value="' + row["Id"] +'" class="md-check child checkbox">';
                    }
                    , "orderable": false, "width": "1%"
                },
                { "title": "Name", "data": "Name", "orderable": false, "width": "5%" },
                {
                    "title": "Edit","class":"actionIcon",
                    "data": null,
                    "render": function (data, type, row) {
                        var appendstring = '';
                        appendstring += '<button type="button" class="btn btn-sm btn-outline-secondary" onclick=OpenAddNewItem('+row["Id"]+') title="View Details"><i class="fa fa-edit"></i></button>&nbsp;&nbsp;';
                        return appendstring;
                    },
                    "width": "3%",
                    "orderable": false,
                    "class": "action-icons"
                }
            ],
            // setup buttons extentension: http://datatables.net/extensions/buttons/
            "buttons": [
                 {
                    text: 'Add Wine Varital',
                    className: 'addData',
                    action: function (e, dt, node, config) {
                        //dt.ajax.reload();
                        OpenAddNewItem();
                    }
                },
                {
                    text: 'Delete',
                    className: 'addFilters',
                    action: function (e, dt, node, config) {
                        ConfirmMessage();
                    }
                }
            ],

            // setup responsive extension: http://datatables.net/extensions/responsive/
            responsive: true,

            "lengthMenu": [
                [5, 10, 15, 20,50,100,300,500,1000],
                [5, 10, 15, 20,50,100,300,500,1000] // change per page values here
            ],
            // set the initial value

            "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

            // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
            // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
            // So when dropdowns used the scrollable div should be removed.
            //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
        });
    }

    return {

        //main function to initiate the module
        init: function () {
            if ($.fn.DataTable.isDataTable("#CustomerTable")) {
                $('#CustomerTable').dataTable().fnDestroy();
                $('#divCustomerTable').html('<table class="table table-striped" width="100%" id="CustomerTable"></table>');
            }
            initTable1();
        }
    };

}();

    function BuildSearchCriteria() {
    try {
        var param = {};
        param["action"] = "winevaritals";
         return addRequestVerificationToken(param);
    } catch (e) { }
    }

    function addRequestVerificationToken(data) {
    data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
    return data;
    }

    jQuery(document).ready(function () {
        TableDatatablesColreorder.init();
        FormuserValidation.init();
    });     

    var FormuserValidation = function () {

            // basic validation
            var handleValidation = function () {

                var form1 = $('#frmuser');
                var error1 = $('.alert-danger', form1);

                form1.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-block help-block-error', // default input error message class
                    focusInvalid: false, // do not focus the last invalid input
                    ignore: "",  // validate all fields including form hidden input
                    rules: {
                        name: {
                            required: true,
                        }
                    },

                    invalidHandler: function (event, validator) { //display error alert on form submit
                        //success1.hide();
                        error1.show();
                        App.scrollTo(error1, -200);
                    },

                    errorPlacement: function (error, element) { // render error placement for each input type
                        var cont = $(element).parent('.input-group');
                        if (cont.size() > 0) {
                            cont.after(error);
                        } else {
                            element.after(error);
                        }
                    },

                    highlight: function (element) { // hightlight error inputs
                        $(element)
                            .closest('.form-group').addClass('has-error'); // set error class to the control group
                    },

                    unhighlight: function (element) { // revert the change done by hightlight
                        $(element)
                            .closest('.form-group').removeClass('has-error'); // set error class to the control group
                    },

                    success: function (label) {
                        label
                            .closest('.form-group').removeClass('has-error'); // set success class to the control group
                    },

                    submitHandler: function (form) {
                        Upsert();
                    }
                });
            }
            return {
                //main function to initiate the module
                init: function () {
                    handleValidation();
                }
            };
    }();
     
    function OpenAddNewItem(Id) {
            if (Id > 0) {
                $("#smallModalLabel").text("Edit Wine Varital");
                $("#Id").val(0);
                $(".saveBtn").show();
                $(".loading").hide();
                $(".closeBtn").show();

                $.ajax({
                      type: 'POST',
                      url: "@Url.Action(Actions.GetById,Controllers.Master)",
                      async: false,
                      data: ({Id: Id,action: 'winevaritals'}),
                      dataType: 'json',
                    success: function (response) {
                        if (response != null && response.Code == 200 && response.Item != null) {
                            $("#Id").val(response.Item.Id);
                            $("#name").val(response.Item.Name);
                            $('#upsert').modal('show');
                        }
                      },
                    error: function (response) {
                          CloseUpsert();
                      }
                });

            } else {
                $("#smallModalLabel").text("Add Wine Varital");
                $("#Id").val(0);
                $(".saveBtn").show();
                $(".loading").hide();
                $(".closeBtn").show();
                $('#upsert').modal('show');
            }
        }

    function Upsert() {
            $(".saveBtn").hide();
            $(".loading").show();
            $(".closeBtn").hide();
            $.ajax({
                      type: 'POST',
                      url: "@Url.Action(Actions.Upsert,Controllers.Master)",
                      async: false,
                      data: ({Id: $("#Id").val(),name:$("#name").val(),action: 'winevaritals'}),
                      dataType: 'json',
                      success: function (response) {
                          if (response.Code == 200) {
                              CloseUpsert();
                              swal("Great!", "Details Saved !", "success");
                              TableDatatablesColreorder.init();
                          } else {
                              swal("Oops!", response.Message, "error");
                              CloseUpsert();
                          }
                      },
                error: function (response) {
                    swal("Opps!", "An error occured ! Please try again.", "error");
                    CloseUpsert();
                      }
                });
        }

    function CloseUpsert() {
        $("#Id").val(0);
        $("#name").val('');
        $(".saveBtn").show();
        $(".loading").hide();
        $(".closeBtn").show();
        $("#upsert").modal("hide");
    }

    function ConfirmMessage() {
            swal({
                title: "Are you sure ?",
                text: "You will be deleting the selected entries !",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#dc3545",
                confirmButtonText: "Yes, do it !",
                closeOnConfirm: false
            }, function () {
                    Delete();
            });
        }

    function Delete() {
        getCheckedBoxesData();
            $.ajax({
                      type: 'POST',
                      url: "@Url.Action(Actions.Delete,Controllers.Master)",
                      async: false,
                      data: ({ids: $("#checklog").val(),action: 'winevaritals'}),
                      dataType: 'json',
                      success: function (response) {
                          if (response) {
                              swal("Great!", "Wine Varitals Deleted", "success");
                              TableDatatablesColreorder.init();
                          } else {
                              swal("Oops!", response.Message, "error");
                              CloseUpsert();
                          }
                      },
                error: function (response) {
                    swal("Opps!", "An error occured ! Please try again.", "error");
                    CloseUpsert();
                      }
                });
        }

    $(function () {
        $('#select_all').on('change', function () {
            $('.child').prop('checked', this.checked);
        });
        $('.child').on('change', function () {
            $('#select_all').prop('checked', $('.child:checked').length === $('.child').length);
        });
     });

    function getCheckedBoxesData() {
        var data = "";
        $('.md-check:checked').each(function () {
            if ($(".md-check").is(":checked")) {
                data += $(this).closest('tr').find('.child').val() + ",";
            }
            $("#checklog").val(data);
        });
    }
     
    </script>

    <script src="~/assets/validation/js/jquery-ui.min.js"></script>
    <script src="~/assets/validation/js/app.min.js"></script>
    <script src="~/assets/validation/js/ui-modals.min.js"></script>
    <script src="~/assets/validation/js/jquery.validate.min.js"></script>
    <script src="~/assets/validation/js/additional-methods.min.js"></script>
    <script src="~/assets/validation/js/toastr.min.js"></script>
    <script src="~/assets/validation/js/ui-toastr.min.js"></script>
    <script src="~/assets/vendor/dropify/js/dropify.min.js"></script>
    <script src="~/assets/vendor/sweetalert/sweetalert.min.js"></script> <!-- SweetAlert Plugin Js -->
    <script src="~/assets/js/pages/forms/dropify.js"></script>
    <script src="~/assets/js/pages/ui/dialogs.js"></script>
}

